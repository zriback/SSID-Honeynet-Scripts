# Ansible playbook for setting up and resetting the honeynet
---

- name: Set up management program on backend
  hosts: backend
  connection: local
  tasks:
          - name: Copy management script for backend  
            ansible.builtin.copy:
                src: files/manage_captures.py
                dest: /opt/tpot/etc/manage_captures.py
                owner: root
                group: root
                mode: '0755'
          - name: Start running management script
            ansible.builtin.shell: "python3 /opt/tpot/etc/manage_captures.py --listen-int 127.0.0.1 --save-loc /data/cowrie/captures/backend --backend-save-loc /data/cowrie/captures/backend &> /dev/null &"
            async: 1
            poll: 0
          - name: Copy logmon script for backend  
            ansible.builtin.copy:
                src: files/log_mon.py
                dest: /opt/tpot/etc/log_mon.py
                owner: root
                group: root
                mode: '0755'
          - name: Start running logmon script
            ansible.builtin.shell: "python3 /opt/tpot/etc/log_mon.py &> /dev/null &"
            async: 1
            poll: 0


- name: Set up management program on webserver
  hosts: webserver
  remote_user: ansible
  become: yes
  tasks:
        # Run the script on the webserver
          - name: Copy over capture script for webserver
            ansible.builtin.copy:
                src: files/manage_captures.py
                dest: /data/caps/manage_captures.py
                owner: ansible
                group: ansible
                mode: '0755'
          - name: Start running the capture script
            ansible.builtin.shell: "python3 /data/caps/manage_captures.py --listen-int 192.168.1.20 --save-loc /data/caps --backend-save-loc /data/cowrie/captures/webserver &> /dev/null &"
            async: 1
            poll: 0


- name: Set up management program on FTP server
  hosts: ftp_server
  ignore_unreachable: true
  remote_user: ansible
  become: yes
  tasks:
        # Run the script on the webserver
          - name: Copy over capture script for ftp server
            ansible.builtin.copy:
                src: files/manage_captures.py
                dest: /data/caps/manage_captures.py
                owner: ansible
                group: ansible
                mode: '0755'
          - name: Start running the capture script
            ansible.builtin.shell: "python3 /data/caps/manage_captures.py --listen-int 192.168.1.27 --save-loc /data/caps --backend-save-loc /data/cowrie/captures/ftp-server &> /dev/null &"
            async: 1
            poll: 0


- name: Set up management program on database server
  hosts: database
  ignore_unreachable: yes
  remote_user: ansible
  become: yes

  tasks:
        # Run the script on the webserver
          - name: Copy over capture script for database server
            ansible.builtin.copy:
                src: files/manage_captures.py
                dest: /data/caps/manage_captures.py
                owner: ansible
                group: ansible
                mode: '0755'
          - name: Start running the capture script
            ansible.builtin.shell: "python3 /data/caps/manage_captures.py --listen-int 192.168.1.36 --save-loc /data/caps --backend-save-loc /data/cowrie/captures/database &> /dev/null &"
            async: 1
            poll: 0


- name: Set up management program on Windows10 host
  hosts: windows10
  ignore_unreachable: true
  remote_user: ansible
  tasks:
          - name: Copy over capture script for Windows10
            ansible.windows.win_copy:
                src: files/manage_captures_win.py
                dest: C:\Users\ansible\caps\manage_captures_win.py
          - name: Start running the capture script
            ansible.windows.win_powershell:
                script: |
                  $proc = Start-Process -FilePath py -ArgumentList @( "C:\\Users\\ansible\\caps\\manage_captures_win.py", "--listen-int", "192.168.1.29", "--save-loc", "C:\\Users\\ansible\\caps", "--backend-save-loc", "/data/cowrie/captures/windows10") -PassThru
                  $proc | Export-Clixml -Path "C:\\Users\\ansible\\caps\\manage_captures_process_handle.xml"

            async: 1
            poll: 0


- name: Set up management program on Windows Server
  hosts: winserv
  ignore_unreachable: true
  remote_user: ansible
  tasks:
          - name: Copy over capture script for Windows Server
            ansible.windows.win_copy:
                src: files/manage_captures_win.py
                dest: C:\Users\ansible\caps\manage_captures_win.py
          - name: Start running the capture script
            ansible.windows.win_powershell:
                script: |
                  $proc = Start-Process -FilePath py -ArgumentList @( "C:\\Users\\ansible\\caps\\manage_captures_win.py", "--listen-int", "192.168.1.37", "--save-loc", "C:\\Users\\ansible\\caps", "--backend-save-loc", "/data/cowrie/captures/winserv") -PassThru
                  $proc | Export-Clixml -Path "C:\\Users\\ansible\\caps\\manage_captures_process_handle.xml"

            async: 1
            poll: 0
 
